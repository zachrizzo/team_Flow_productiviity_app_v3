import { ExpoGraphqlClient } from '../commandUtils/context/contextUtils/createGraphqlClient';
import { PaginatedQueryOptions } from '../commandUtils/pagination';
import { BuildFilter, BuildFragment } from '../graphql/generated';
export declare const BUILDS_LIMIT = 50;
export declare function listAndRenderBuildsOnAppAsync(graphqlClient: ExpoGraphqlClient, { projectId, projectDisplayName, filter, paginatedQueryOptions, }: {
    projectId: string;
    projectDisplayName: string;
    filter?: BuildFilter;
    paginatedQueryOptions: PaginatedQueryOptions;
}): Promise<void>;
export declare function listAndSelectBuildsOnAppAsync(graphqlClient: ExpoGraphqlClient, { projectId, projectDisplayName, filter, queryOptions, }: {
    projectId: string;
    projectDisplayName: string;
    filter?: BuildFilter;
    queryOptions: PaginatedQueryOptions;
}): Promise<BuildFragment>;
export declare function getLatestBuildAsync(graphqlClient: ExpoGraphqlClient, { projectId, filter, }: {
    projectId: string;
    filter?: BuildFilter;
}): Promise<BuildFragment>;
