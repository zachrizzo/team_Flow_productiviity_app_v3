import { ExpoGraphqlClient } from '../commandUtils/context/contextUtils/createGraphqlClient';
import { PaginatedQueryOptions } from '../commandUtils/pagination';
import { CreateUpdateBranchForAppMutationVariables, UpdateBranch, UpdateBranchFragment } from '../graphql/generated';
export declare const BRANCHES_LIMIT = 50;
export declare function selectBranchOnAppAsync(graphqlClient: ExpoGraphqlClient, { projectId, promptTitle, displayTextForListItem, paginatedQueryOptions, }: {
    projectId: string;
    displayTextForListItem: (queryItem: UpdateBranchFragment) => string;
    promptTitle: string;
    paginatedQueryOptions: PaginatedQueryOptions;
}): Promise<UpdateBranchFragment>;
export declare function listAndRenderBranchesOnAppAsync(graphqlClient: ExpoGraphqlClient, { projectId, paginatedQueryOptions, }: {
    projectId: string;
    paginatedQueryOptions: PaginatedQueryOptions;
}): Promise<void>;
export declare function createUpdateBranchOnAppAsync(graphqlClient: ExpoGraphqlClient, { appId, name }: CreateUpdateBranchForAppMutationVariables): Promise<Pick<UpdateBranch, 'id' | 'name'>>;
export declare function ensureBranchExistsAsync(graphqlClient: ExpoGraphqlClient, { appId, branchName, }: {
    appId: string;
    branchName: string;
}): Promise<{
    branchId: string;
}>;
