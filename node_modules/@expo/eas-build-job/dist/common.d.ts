import Joi from 'joi';
import { BuildPhase, BuildPhaseResult } from './logs';
export declare enum Workflow {
    GENERIC = "generic",
    MANAGED = "managed"
}
export declare enum Platform {
    ANDROID = "android",
    IOS = "ios"
}
export declare enum ArchiveSourceType {
    S3 = "S3",
    URL = "URL",
    PATH = "PATH",
    GCS = "GCS"
}
export declare type ArchiveSource = {
    type: ArchiveSourceType.S3;
    bucketKey: string;
} | {
    type: ArchiveSourceType.GCS;
    bucketKey: string;
} | {
    type: ArchiveSourceType.URL;
    url: string;
} | {
    type: ArchiveSourceType.PATH;
    path: string;
};
export declare const ArchiveSourceSchema: Joi.ObjectSchema<ArchiveSource>;
export declare type Env = Record<string, string>;
export declare const EnvSchema: Joi.ObjectSchema<any>;
export declare type EnvironmentSecret = {
    name: string;
    type: EnvironmentSecretType;
    value: string;
};
export declare enum EnvironmentSecretType {
    STRING = "string",
    FILE = "file"
}
export declare const EnvironmentSecretsSchema: Joi.ArraySchema;
export interface Cache {
    disabled: boolean;
    clear: boolean;
    key?: string;
    cacheDefaultPaths: boolean;
    customPaths: string[];
}
export declare const CacheSchema: Joi.ObjectSchema<any>;
export interface BuildPhaseStats {
    buildPhase: BuildPhase;
    result: BuildPhaseResult;
    durationMs: number;
}
